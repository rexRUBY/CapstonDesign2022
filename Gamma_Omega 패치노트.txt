Gamma_Omega 패치노트

무수히 많은 Gamma버전의 업데이트 끝에 드디어 Gamma_Omega 업데이트가 완료되었습니다.
이번 업데이트는 3라운드 추가와 더불어 자잘한 패치들이 진행되었습니다.
이전 버전을 삭제하시고 이번 업데이트된 파일을 사용해주시기 바랍니다.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1. 3라운드 추가
  -> 「3라운드 - 구슬치기」가 추가되었습니다. 우클릭을 누른 상태로 움직이면 화살표 방향이 움직이고, 화살표 머리를 누른 상태로 위/아래로 움직여
     던질 힘을 조절하고 스페이스 바로 발사합니다. 제한시간 1분 내에 10개의 구슬을 원 밖으로 튕겨보내면 성공입니다.
     자세한 사항은 후술할 세부사항 1번을 참고해주시기 바랍니다.

2. 각 라운드별 패널 크기 조정
  -> 기존 alpha버전에는 각 라운드마다 사용된 캔버스들이 고정 값을 가지고있어 화면 크기가 달라짐에 따라 내용이 잘리거나 캔버스 뒤로 
     플레이 구역이 보이는 문제가 있었으나 캔버스마다 Canvas Scaler 컴포넌트를 추가함으로 화면 크기에 따라 캔버스 크기가대응하게 되었습니다.
     자세한 사항은 후술할 세부사항 2번을 참고해주시기 바랍니다.

3. 각 라운드별 패널 등장 시간 조정
  -> 씬이 바뀌면 바로 라운드 시작 패널이 동작하고, 성공하나 실패하나 바로바로 등장했던 패널들. 아무 전조 없이 왜 실패했는지 왜 성공인지를
     모를 수도 있다는 가정 하에 각 패널이 등장하는 시간을 Invoke를 통해 조절했습니다. 이젠 최소 1초의 여유를 두고 패널이 동작합니다.
     자세한 사항은 후술할 세부사항 3번을 참고해주시기 바랍니다.

4. GameManager의 대폭 수정
  -> 코드 가독성을 위해 일부 변수와 메소드들이 수정되었습니다. 그에 따라 각 라운드에 사용되던 오브젝트나 캔버스 역시 수정되었습니다.
     자세한 사항은 후술할 세부사항 4번을 참고해주시기 바랍니다.

5. 기존 1라운드 소폭 수정
  -> 알파버전을 기반으로 일부 코드가 수정되었습니다. 자세한 사항은 후술할 세부사항 5번을 참고해주시기 바랍니다.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
세부사항

1. 3라운드 추가
  게임 메니저를 제외한 스크립트 3개(ArrowControl, OnGround, ThrowBead)가 추가되었습니다.

  ArrowControl : 화면 하단의 화살표를 제어하기 위한 코드로 우클릭동안 화살표의 좌우이동(방향), 클릭으로 화살표 길이(힘), 발사를 담당
    - 우클릭하는 동안 마우스 좌우 이동으로 전방 약 160도까지 방향 전환이 가능
    - 화살표 머리를 움직이면 슬라이더로 인해 value값이 0~1사이로 설정되고 이를 PowerFigure에서 100을 곱해 정수로 power에 저장, 출력
    - coolTime 변수는 연속 발사를 방지하기 위함으로 참/거짓 전환은 CoolTime메서드가 담당
    - 스페이스 바로 발사, 이 때 coolTime이 참이되고 구슬을 소환, 생명을 하나 차감하고 던지는 횟수를 1 늘리며,
     Invoke로 인해 5초 뒤 다시 coolTime이 거짓이 되어 발사가 가능하다
    - 구슬의 소환 위치는 화살표 하단으로 각도와 power값에 따라 포물선 형태로 발사된다

  OnGround : 쳐내야하는 구슬(이하 타깃)이 원 밖으로 나갔는지를 감지하는 코드
    - 접촉한 오브제의 태그가 bead면 게임 메니저의 BeadCounter를 호출한다. BeadCounter는 후술할 게임 메니저에 포함

  ThrowBead : 구슬에 포함되는 구슬을 발사하기 위한 힘을 가하는 코드 
    - ArrowControl에서 power값을 받아 10배로 앞으로 나아간다

  게임 메니저 : R3 총괄코드로 Beta_Omega버전과는 일부 변수 명이나 메소드에 약간의 차이가 있음. 후술할 설명은 추가 배포한 R3기준
    - BeadCounter : 앞서 설명한 OnGround에서 원 밖을 벗어나는 타깃을 감지하기 위함으로 10개가 되면 1초뒤 승리 패널이 활성화
    - DecreaseLife : 목숨 차감 코드로 앞서 설명한 ArrowControl의 스페이스 바 입력 코드에서 호출된다.
                       0이 됐을 때 나간 구슬이 10개가 아니면 5초뒤 실패 패널이 활성화

2. 각 라운드 패널 크기
  Canvas Scaler 컴포넌트는 화면에 대해 캔버스 크기를 조절하는 컴포넌트로 실질적으로 사용된 것 위주로 후술
  UI Scale Mode - Scale With Screen Size : UI 확대 모드에는 3종류가 있고 그 중 하나인 Scale With Screen Size는 화면 크기에 비례한다
  Reference Resolution : Scale With Screen Size일 때 나오는 것으로 기준이 되는 화면 크기이다.
                             기본은 800X600으로 크게 타격이 없을 듯 하여 기본 설정을 따름
  Screen Match Mode - Expand : 3가지 모드가 있고 Expand는 화면에 따라 확대시킨다

  이 설정으로 인해 화면 크기에 상관없이 패널들이 화면 전체를 차지하며, 이에 따라 내부 요소의 크기역시 맞춰진다

3. 각 라운드별 패널 등장 시간
  모든 패널 호출을 Invoke를 통해 호출함으로 상황에 따라 패널 별로 최소 1초에서 5초까지의 간격을 두고 실행시켜 원활한 플레이를 지향

4. GameManager의 대폭 수정
  특히 위 3번으로 인해 패널 관련 메소드들에 변화가 생겼으며, 그와 연계되는 이하 모든 메소드를 수정했습니다.
  - 중복 변수 제거
    기존 r1과 r2로 구분했던 캔버스나 텍스트를 받기 위한 변수나 공통적으로 사용될 법한 변수들을 하나로 통일했습니다.
    (각 씬에 존재하는 GM에 각 변수에 맞게 넣으면 될 걸 왜 라운드로 구분짓고 각각 넣었을까...)
  - 중복 사용 메소드 통합
    라운드 카운트다운 관련 코드나 성공/실패시 나타나는 패널 통제 코드나 목숨 차감 코드 등 중복 코드를 상황에 맞게 통합해
   중복 코드 사용을 지양

5. 기존 1라운드 소폭 수정
  - R1
   기본 속도를 0.5에서 1로 상향
   시작 지점 아이템 일부 위치 수정 (속도 아이템 중첩 사용 불가로 인한 처리)
   기존 캔버스에 IntroCanvas를 추가, 간단한 인트로에 시작 버튼을 눌러야 기존 시작 화면 패널이 활성화
